apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 25
        ndk{
            abiFilters "armeabi","armeabi-v7a","x86","mips"
        }
    }


    buildTypes {
        sourceSets.main {
            jniLibs.srcDir 'src/main/jniLibs'
            jni.srcDirs = [];

        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            }
        }

    }
}

tasks.withType(JavaCompile) {
    //compileTask -> compileTask.dependsOn ndkBuild
}
task ndkBuild(type: Exec) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkbuild = properties.getProperty('ndk.dir', null)+"/ndk-build"
    commandLine ndkbuild, '-C', file('src/tangoAndTensorFlow/jni').absolutePath
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    //    compile project(':cpp_example_util')
    compile project(':tango_java_lib')
    compile project(':tango_support_java_lib')
    compile project(':tango_ux_support_library')
}

def external_lib_prefix = null
if (project.hasProperty("Tango.catkin_devel_prefix")) {
    external_lib_prefix = project.property("Tango.catkin_devel_prefix")
} else {
    // Building in standalone sample form.
    external_lib_prefix = "../TangoReleaseLibs"
}


repositories{
    flatDir{
        dirs external_lib_prefix + '/aar'
    }
}

repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
}

dependencies {
    compile fileTree(dir: external_lib_prefix + '/jar', include: ['**/*.jar'])
    compile 'org.rajawali3d:rajawali:1.0.325@aar'
    compile 'com.android.support:appcompat-v7:25.1.0'

    compile project(':common')


}
